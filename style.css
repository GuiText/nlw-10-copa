* {
  /* O seletor universal pega todos os elementos e tira as configurações padrões do navegador */
  margin: 0;
  padding: 0;
  box-sizing: border-box; /* a medida da caixa vai ser a partir da borda, não contando mais o padding que colocar, pois se eu defino que a width vai ser 200px, e coloco uma padding de 52px, ele vai somar o conteudo da caixa ficando 252px, sendo que era apenas para contar o tamanho da largura (width: 200px;)*/
}

:root { /* seleciona a raiz do html */
  --card-tittle-border-color: #746615;
  --card-color-primary: #f7dd43; /* variavel */
  --card-bg-color: #1d1c19;
  --bg: url(./assets/bg-yeloow.svg);
}

body.blue {
  --card-tittle-border-color: #338AF3;
  --card-color-primary: #338AF3;
  --card-bg-color: #202036;
  --bg: url(./assets/bg-blue.svg);
}

body.green {
  --card-tittle-border-color: #047C3F;
  --card-color-primary: #047C3F;
  --card-bg-color: #1A1F1B;
  --bg: url(./assets/bg-green.svg);
}

ul {
  list-style: none;
}

body {
  background-color: #121214;
  background-image: var(--bg);
  background-position: top center;
  background-repeat: no-repeat;
  background-size: cover;
}

body * {
  font-family: "Roboto", sans-serif;
}

#app {
  width: fit-content; /* encaixa o conteudo da tagna tela */
  margin: auto;
  padding-top: 52px;
}

header {
  margin-bottom: 63px;
  text-align: center;
}

#cards {
  display: flex;
  flex-direction: column;
  gap: 32px;
}

.card {
  padding: 32px 23px;
  text-align: center; /* alinha ao centro todos os elementos que recebem display inline */
  background: var(--card-bg-color);
  border-bottom: 2px solid var(--card-color-primary);
  border-radius: 6px;
}

.card h2 {
  display: flex; /* faz com que o elemento fique colado um ao lado do outro, e desbloquea algumas propriedades, como gap, align-items */
  gap: 16px;
  justify-content: center;
  align-items: center;

  padding: 8px 16px;
  border: 1px solid var(--card-tittle-border-color);
  border-radius: 6px;

  width: fit-content;
  margin-inline: auto; /* trabalha com as margens em linha */
  margin-bottom: 53px;

  color: #f7dd43;
}

.card h2 span {
  color: #e1e1e6;
  font-size: 14px;
  text-transform: uppercase;
}

.card ul li {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.card ul {
  display: flex;
  flex-direction: column;
  gap: 24px;

  width: 270px;
}

.card ul li + li {
  /* O seletor + diz que vai pegar o li que vai ter anterior a ele um li */
  padding-top: 24px;
  border-top: 1px solid #323238;
}

.card ul li strong {
  font-weight: 900;
  font-size: 36px;
  line-height: 125%;
  color: #e1e1e6;
}

.card h2:hover,
.card ul li strong:hover, /* hover -> vai ser interpretado quando passar o mouse em cima */
.card ul li img:hover {
  transform: scale(1.1);
}

.card h2,
.card ul li strong,
.card ul li img {
  transition: transform .0.3s;
}

.card {
  opacity: 0;
  animation: appear .2s forwards;
}

/* .card:nth-child(1) {
  animation-delay: .2s;
} */

/* .card:nth-child(2) {
  animation-delay: .2s;
}

.card:nth-child(3) {
  animation-delay: .4s;
} */

/* tudo que vemos em css com @ é uma at rule, regra de @, é uma regra criada */
@keyframes appear {
  0% {
    transform: translateY(-50px);
    opacity: 0;
  }
  100% {
    opacity: 1;
  }
}

@media (min-width: 700px){ /* se a largura minima da tela for a partir de 700px pra cima, aplica as regras que estão em #cards */
  #cards {
    max-width: 670px;
    flex-direction: row; /* coloca o conteudo um ao lado do outro */
    flex-wrap: wrap; /* quando chegar na largura maxima de 670px o proximo conteudo vai para baixo, e as caixas tentam se ajustar  */
  }
}